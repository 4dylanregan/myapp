{"version":3,"sources":["components/LangDropdown.js","components/SearchBar.js","components/SearchResult.js","App.js","reportWebVitals.js","index.js"],"names":["LangDropdown","options","changeParameter","data","useState","languages","setLanguages","useEffect","langArray","children","forEach","document","language","name","length","push","sort","a","b","map","value","code","createOption","onChange","e","target","id","SearchBar","props","onSubmit","preventDefault","autoComplete","type","placeholder","SearchResult","onClick","undefined","url","window","location","href","title","author","lang","fpb","require","jsonToArray","json","arr","sections","section","includes","entries","entry","subsections","subsection","App","setData","dataArray","setDataArray","setIndex","loading","setLoading","searchParams","setSearchParams","searchResults","setSearchResults","sectionResults","setSectionResults","error","resultsList","sectionResultsList","param","axios","get","result","fetchData","fuse","Fuse","useExtendedSearch","findAllMatches","shouldSort","includeScore","threshold","keys","query","Object","key","search","$and","slice","sResults","item","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7836e2a5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction LangDropdown({ changeParameter, data }){\r\n    const [ languages, setLanguages ] = useState([]);\r\n    let options = null;\r\n\r\n    const handleChange = (e) => {\r\n        changeParameter('lang.code', e.target.value);\r\n    }\r\n\r\n    useEffect( // run whenever data changes\r\n        () => {\r\n            if(data){\r\n                let langArray = [];\r\n                data.children[0].children.forEach( (document) => {\r\n\t\t\t\t\tif (typeof document.language.name === \"string\" && document.language.name.length > 0) //make sure the language is valid and not blank\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//console.log(\"LANGUAGE: \" + document.language.name)\r\n\t\t\t\t\t\tlangArray.push(document.language);\r\n\t\t\t\t\t}\r\n                });\r\n                langArray.sort((a, b) => a.name > b.name)\r\n                setLanguages(langArray);\r\n            }\r\n        },\r\n        [data]\r\n    )\r\n\r\n    const createOption = (language) => {\r\n        return (<option key={language.code} value={language.code}>{language.name}</option>)\r\n    }\r\n\r\n    options = \r\n            languages &&\r\n            languages.map( (language) => {\r\n                return createOption(language)\r\n            });\r\n    // console.log(options);\r\n    return(  \r\n        <select onChange={handleChange} name=\"languages\" id=\"languages\">\r\n            <option key=\"allLangs\" value=\"\">All Languages</option>\r\n            {options}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default LangDropdown;","import React from 'react';\r\n\r\nfunction SearchBar(props){\r\n    const handleChange = (e) => {\r\n        props.changeParameter('title', e.target.value);\r\n    }\r\n\r\n    return(\r\n        <form\r\n            onSubmit={(e) => {\r\n                e.preventDefault();\r\n            }}\r\n            name=\"searchBar\"\r\n        >\r\n            <input autoComplete=\"off\" type=\"text\" name=\"searchTerm\" placeholder=\"Enter Book Name\" onChange={handleChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nfunction SearchResult({ data }){\r\n    return(\r\n        <div>\r\n            <button onClick={(e) => {\r\n\t\t\t\t\tif (data.url !== undefined)\r\n\t\t\t\t\t{\r\n\t\t\t\t  e.preventDefault();\r\n\t\t\t\t  window.location.href= data.url;\r\n\t\t\t\t\t}}}>\r\n                <h3>{data.title} by {data.author}</h3>\r\n                <p>({data.lang.code})</p>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResult;","import React, { useState, useEffect } from 'react';\r\nimport LangDropdown from './components/LangDropdown';\r\nimport SearchBar from './components/SearchBar';\r\nimport SearchResult from './components/SearchResult';\r\nimport axios from 'axios';\r\nimport Fuse from 'fuse.js';\r\n\r\nconst fpb = require('./fpb.json'); //local copy of json becuase online currently can't be accessed\r\n\r\nfunction makeBook(author, hLang, cLang, title, url)\r\n{\r\n\t//returns a struct with basic book info (author, human language, computer language, book title, url)\r\n\treturn {'author': author,\r\n\t\t\t'hLang': hLang, //human language\r\n\t\t\t'cLang': cLang, //computer language\r\n\t\t\t'title': title,\r\n\t\t\t'url': url\r\n\t\t\t}\r\n}\r\n\r\nfunction forEachBook(func, json) //Runs func on each section, entry, and book in json, which is a list of entries\r\n{\r\n\tif (typeof func !== 'function')\r\n\t{\r\n\t\tthrow \"ERROR in forEachBook: parameter not a fucntion\"\r\n\t}\r\n\t\r\n\tfor (const hLang in json) //for each human language\r\n\t{\r\n\t\tif (Array.isArray(hLang.sections)) //check if sections is an array \r\n\t\t{\r\n\t\t\thLang.sections.forEach( \r\n\t\t\t(cLang) => //for each computer lanuage\r\n\t\t\t\t{if (Array.isArray(cLang.entries)) //verify is entries is an array\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcLang.entries.forEach( \r\n\t\t\t\t\t\t(book) =>  //for each book\r\n\t\t\t\t\t\t\t{if (typeof book === \"object\") //verify that book is an object\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tfunc(json[hLang],cLang,book) //run the function\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}}\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n\r\n// Sorts search results by their score\r\nfunction sortByScore(results){\r\n\tresults.sort(function(a,b){\r\n\t\treturn a.score - b.score;\r\n\t});\r\n\treturn results;\r\n}\r\n\r\n\r\nfunction jsonToArray(json){\r\n\tlet arr = [];\r\n\tlet sections = [];\r\n\tjson.children[0].children.forEach(\r\n\t\t(document) => {\r\n\t\t\tdocument.sections.forEach(\r\n\t\t\t\t(section) => {\r\n\t\t\t\t\tif(!sections.includes(section.section))\r\n\t\t\t\t\t\tsections.push(section.section);\r\n\t\t\t\t\tsection.entries.forEach(\r\n\t\t\t\t\t\t(entry) => {\r\n\t\t\t\t\t\t\tarr.push({author: entry.author, title: entry.title, url: entry.url, lang: document.language, section: section.section});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsection.subsections.forEach(\r\n\t\t\t\t\t\t(subsection) => {\r\n\t\t\t\t\t\t\tsubsection.entries.forEach(\r\n\t\t\t\t\t\t\t\t(entry) => {\r\n\t\t\t\t\t\t\t\t\tarr.push({author: entry.author, title: entry.title, url: entry.url, lang: document.language, section: section.section, subsection: subsection.section});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t)\r\n\treturn {arr: arr, sections: sections};\r\n}\r\n\r\nfunction App() {\r\n\tconst [ data, setData ] = useState(undefined); // keeps the state of the json\r\n\tconst [ dataArray, setDataArray ] = useState([]); // put everything into one array. uses more memory, but search is faster and less complex\r\n\tconst [ index, setIndex ] = useState([]); // used for \"table of contents\". currently unused\r\n\tconst [ loading, setLoading ] = useState(true); // Determines whether to show spinner\r\n\tconst [ searchParams, setSearchParams ] = useState({title: ''});\r\n\tconst [ searchResults, setSearchResults ] = useState([]);\r\n\tconst [ sectionResults, setSectionResults ] = useState([]);\r\n\tconst [ error, setError ] = useState('');\r\n\r\n\tlet resultsList = null; // the html string containing the search results\r\n\tlet sectionResultsList = null;\r\n\r\n\tconst changeParameter = (param, value) => { // Lets a child component set the value of the search term\r\n\t\tsetSearchParams({...searchParams, [param]: value});\r\n\t};\r\n\r\n\t// fetches data the first time the page renders\r\n\tuseEffect( \r\n\t\t() => {\r\n\t\t\tasync function fetchData() {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tsetLoading(true);\r\n\t\t\t\t\tlet result = await axios.get('https://raw.githubusercontent.com/FreeEbookFoundationBot/free-programming-books-json/main/fpb.json');\r\n\t\t\t\t\tsetData(result.data);\r\n\t\t\t\t\tlet { arr, sections } = jsonToArray(result.data);\r\n\t\t\t\t\tsetDataArray(arr);\r\n\t\t\t\t\tsetIndex(sections);\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e){\r\n\t\t\t\t\t// setError(\"Couldn't get data. Please try again later\")\r\n\t\t\t\t\tsetData(fpb);\r\n\t\t\t\t\tlet { arr, sections } = jsonToArray(fpb);\r\n\t\t\t\t\tsetIndex(sections);\r\n\t\t\t\t\tsetDataArray(arr);\r\n\t\t\t\t}\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tfetchData();\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\t\r\n\t// fires when searchTerm changes\r\n\t// THIS IS THE MAIN SEARCH FUNCTION CURRENTLY\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif(dataArray){\r\n\t\t\t\t// Finds most relevant titles\r\n\t\t\t\tconst fuseOptions = {\r\n\t\t\t\t\tuseExtendedSearch: true,\r\n\t\t\t\t\tfindAllMatches: true, \r\n\t\t\t\t\tshouldSort: true, \r\n\t\t\t\t\tincludeScore: true, \r\n\t\t\t\t\tthreshold: 0.2, \r\n\t\t\t\t\tkeys: ['title', 'lang.code']\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet fuse = new Fuse(dataArray, fuseOptions);\r\n\t\t\t\tlet query = [];\r\n\t\t\t\tfor (const [key, value] of Object.entries(searchParams)) {\r\n\t\t\t\t\tif(value === null || value === '') continue;\r\n\t\t\t\t\tif(key === 'lang.code'){\r\n\t\t\t\t\t\tquery.push({'lang.code': `^${value}`});\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t\tquery.push({[key]: value});\r\n\t\t\t\t}\r\n\t\t\t\tlet result = fuse.search({\r\n\t\t\t\t\t$and: query\r\n\t\t\t\t});\r\n\t\t\t\tresult = result.slice(0, 40);\r\n\t\t\t\tsetSearchResults(result);\r\n\r\n\t\t\t\tlet sResults = []; // section results \r\n\t\t\t\t// Finds the most relevant sections\r\n\t\t\t\tresult.forEach( (entry) => {\r\n\t\t\t\t\tlet section = entry.item.section;\r\n\t\t\t\t\tif(!sResults.includes(section))\r\n\t\t\t\t\tsResults.push(section);\r\n\t\t\t\t});\r\n\t\t\t\tsetSectionResults(sResults);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ searchParams ]\r\n\t)\r\n\r\n\tif(loading){ // if still fetching resource\r\n\t\treturn(\r\n\t\t\t<h1>Loading...</h1>\r\n\t\t);\r\n\t}\r\n\tif(error){\r\n\t\treturn(\r\n\t\t\t<h1>Error: {error}</h1>\r\n\t\t)\r\n\t}\r\n\tif(searchParams.title && searchResults.length !== 0){\r\n\t\tresultsList =\r\n\t\t\tsearchResults &&\r\n\t\t\tsearchResults.map((entry) => {\r\n\t\t\t\treturn <SearchResult data={entry.item}/>\r\n\t\t\t});\r\n\t\tsectionResultsList = \r\n\t\t\tsectionResults && \r\n\t\t\tsectionResults.map((section) => {\r\n\t\t\t\treturn <li>{section}</li>\r\n\t\t\t});\r\n\t}\r\n\treturn(\r\n\t\t<div className=\"frontPage\">\r\n\t\t\t<h1>Free Programming Books</h1>\r\n\t\t\t<div>\r\n\t\t\t\t<SearchBar changeParameter={changeParameter}/>\r\n\t\t\t\t<LangDropdown changeParameter={changeParameter} data={data}/>\r\n\t\t\t</div>\r\n\t\t\t<h2>Section Results</h2>\r\n\t\t\t{sectionResultsList && <p>This feature is not complete! For now, use this to help reference the markdown documents on the main respository.</p>}\r\n\t\t\t<div className=\"search-results\">\r\n\t\t\t\t{sectionResultsList}\r\n\t\t\t</div>\r\n\t\t\t<h2>Top Results</h2>\r\n\t\t\t<div className=\"search-results\">\r\n\t\t\t\t{resultsList}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n \r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}